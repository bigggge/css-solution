/*
1.Sass 和 SCSS 其实是同一种东西，我们平时都称之为 Sass，
两者之间不同之处有以下两点：

文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名

语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，
而 SCSS 的语法书写和我们的 CSS 语法书写方式非常类似。

2.Sass 的编译有多种方法：
命令编译
GUI工具编译
自动化编译(Grunt 和 Gulp)

*/

//1.使用变量

$highlight-color: #F90;

$nav-color: #F90;
nav {
  $width: 100px;
  width: $width;
  color: $nav-color;
}

//2.嵌套css规则
//# 1
#content {
  article {
    h1 {
      color: #333333
    }
    padding: {
      margin-bottom: 1.4em
    }
    aside {
      background-color: #eeeeee;
    }
  }
}

//# 2 父选择器的标识符&

//WRONG这意味着color: red这条规则将会被应用到选择器article a :hover，
//article元素内链接的所有子元素在被hover时都会变成红色。
//这是不正确的！你想把这条规则应用到超链接自身，
//而后代选择器的方式无法帮你实现。
article a {
  color: blue;
  :hover {
    color: red
  }
}

//RIGHT
article a {
  color: blue;
  &:hover {
    color: red
  }
}

//# 3
.container {
  h1, h2, h3 {
    margin-bottom: .8em
  }
}

nav, aside {
  a {
    color: blue
  }
}

//# 4 嵌套属性
nav {
  border: {
    style: solid;
    width: 1px;
    color: #ccc;
  }
}

//3.导入sass文件

.blue-theme {
  @import "blue-theme";
}

//生成的结果跟你直接在.blue-theme选择器内写_blue-theme.scss文件的内容完全一样。

.blue-theme {
  aside {
    background: blue;
    color: #fff;
  }
}

//4. 静默注释

body {
  color: #333; // 这种注释内容不会出现在生成的css文件中
  padding: 0; /* 这种注释内容会出现在生成的css文件中 */
}

//5. 混合器

@mixin rounded-corners {
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}

.notice {
  background-color: green;
  border: 2px solid #00aa00;
  @include rounded-corners;
}

@mixin link-colors($normal,$hover,$visited) {
  color: $normal;
  &:hover {
    color: $hover;
  }
  &:visited {
    color: $visited;
  }
}

a {
  @include link-colors(blue, red, green)
}

a {
  @include link-colors(
          $normal: blue,
          $visited: green,
          $hover: red
  );
}

//6. 使用选择器继承来精简CSS

.error {
  border: 1px red;
  background-color: #fdd;
}

.seriousError {
  @extend .error;
  border-width: 3px;
}